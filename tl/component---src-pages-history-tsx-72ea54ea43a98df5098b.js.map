{"version":3,"sources":["webpack://tl-reference/./src/pages/history.tsx"],"names":["HistoryPage","data","classes","usePageStyles","layers","nodes","sort","a","b","layer","rev","className","heading1","variant","id","paragraph","title","map","component","Link","to","source","website","date"],"mappings":"6NAqBe,SAASA,EAAT,GAAwD,IAAjCC,EAAiC,EAAjCA,KAC5BC,GAAUC,UAMhB,OAJAF,EAAKG,OAAOC,MAAMC,MAAK,SAACC,EAAGC,GAAJ,OACnBD,EAAEE,QAAUD,EAAEC,MAAQD,EAAEE,IAAMH,EAAEG,IAAMF,EAAEC,MAAQF,EAAEE,SAIlD,gBAAC,KAAD,KACI,gBAAC,IAAD,KACI,yCAGJ,uBAAKE,UAAWT,EAAQU,UACpB,gBAAC,IAAD,CAAYC,QAAQ,KAAKC,GAAG,gBAA5B,YAIJ,gBAAC,IAAD,CAAYD,QAAQ,QAAQF,UAAWT,EAAQa,WAA/C,8GAGI,2BACA,2BAJJ,0CAK2C,wCAE/B,IAPZ,oFAUI,2BACA,2BAXJ,6IAiBA,gBAAC,KAAD,CAASD,GAAG,UAAUE,MAAM,WACvBf,EAAKG,OAAOC,MAAMY,KAAI,SAACR,GAAD,OACnB,gBAAC,IAAD,CAAYI,QAAQ,MAChB,gBAAC,IAAD,CACIK,UAAWC,KACXC,GAAE,iBAAmBX,EAAMA,OACvBA,EAAMC,IAAN,OAAmBD,EAAMC,IAAQ,KAHzC,SAMWD,EAAMA,MACZA,EAAMC,IAAM,GACT,wBAAMC,UAAWT,EAAQQ,KACpB,IADL,QAEUD,EAAMC,MAKxB,6BACK,IADL,QAEU,IACLD,EAAMY,OAAOC,QACR,UACAb,EAAMY,OAAOE,KALvB","file":"component---src-pages-history-tsx-72ea54ea43a98df5098b.js","sourcesContent":["import React from 'react'\nimport { Page, Section, usePageStyles } from '../components/page'\nimport { Link as MuiLink, Typography } from '@material-ui/core'\nimport { Helmet } from 'react-helmet'\nimport { graphql, Link } from 'gatsby'\n\ninterface GraphqlResult {\n    layers: {\n        nodes: {\n            layer: number\n            rev: number\n            source: {\n                date: string\n                commit: string\n                website: boolean\n                file: string\n            }\n        }[]\n    }\n}\n\nexport default function HistoryPage({ data }: { data: GraphqlResult }) {\n    const classes = usePageStyles()\n\n    data.layers.nodes.sort((a, b) =>\n        a.layer === b.layer ? b.rev - a.rev : b.layer - a.layer\n    )\n\n    return (\n        <Page>\n            <Helmet>\n                <title>History</title>\n            </Helmet>\n\n            <div className={classes.heading1}>\n                <Typography variant=\"h3\" id=\"tl-reference\">\n                    History\n                </Typography>\n            </div>\n            <Typography variant=\"body1\" className={classes.paragraph}>\n                In this section of the website, you can explore history of the\n                TL schema, and how it changed over the time.\n                <br />\n                <br />\n                Schemas are fetched automatically from <code>\n                    tdesktop\n                </code>{' '}\n                repository, and older schemas (&lt;14) are fetched directly from\n                Telegram's website.\n                <br />\n                <br />\n                Note that schemas for MTCute are merged from Telegram Desktop\n                and TDLib repositories, and thus may not be exactly the same as\n                in history.\n            </Typography>\n\n            <Section id=\"schemas\" title=\"Schemas\">\n                {data.layers.nodes.map((layer) => (\n                    <Typography variant=\"h5\">\n                        <MuiLink\n                            component={Link}\n                            to={`/history/layer${layer.layer}${\n                                layer.rev ? `-rev${layer.rev}` : ''\n                            }`}\n                        >\n                            Layer {layer.layer}\n                            {layer.rev > 0 && (\n                                <span className={classes.rev}>\n                                    {' '}\n                                    rev. {layer.rev}\n                                </span>\n                            )}\n                        </MuiLink>\n\n                        <small>\n                            {' '}\n                            (from{' '}\n                            {layer.source.website\n                                ? 'website'\n                                : layer.source.date}\n                            )\n                        </small>\n                    </Typography>\n                ))}\n            </Section>\n        </Page>\n    )\n}\n\nexport const query = graphql`\n    query {\n        layers: allHistoryJson {\n            nodes {\n                layer\n                rev\n                source {\n                    website\n                    date(formatString: \"DD-MM-YYYY\")\n                    commit\n                    file\n                }\n            }\n        }\n    }\n`\n"],"sourceRoot":""}