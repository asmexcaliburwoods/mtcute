{"componentChunkName":"component---src-templates-tl-object-tsx","path":"/union/KeyboardButton","result":{"data":{"self":{"tlId":null,"ts":"TypeKeyboardButton","prefix":"","type":"union","name":"KeyboardButton","description":"<div>Bot or inline keyboard buttons</div>\n","descriptionExcerpt":"Bot or inline keyboard buttons","namespace":"$root","returns":null,"available":null,"arguments":null,"subtypes":["keyboardButton","keyboardButtonUrl","keyboardButtonCallback","keyboardButtonRequestPhone","keyboardButtonRequestGeoLocation","keyboardButtonSwitchInline","keyboardButtonGame","keyboardButtonBuy","keyboardButtonUrlAuth","inputKeyboardButtonUrlAuth","keyboardButtonRequestPoll"],"throws":null},"parent":null,"children":{"nodes":[{"ts":"RawKeyboardButton","id":"24a66fee-05b1-5d17-9621-0e12ad6920ea","namespace":"$root","prefix":"","name":"keyboardButton","type":"class","description":"<div>Bot keyboard button</div>\n"},{"ts":"RawKeyboardButtonUrl","id":"c1ae7496-9c52-5874-a494-a998a701227d","namespace":"$root","prefix":"","name":"keyboardButtonUrl","type":"class","description":"<div>URL button</div>\n"},{"ts":"RawKeyboardButtonCallback","id":"9034a3ec-a4da-58e6-beb7-e0fe8153e5a2","namespace":"$root","prefix":"","name":"keyboardButtonCallback","type":"class","description":"<div>Callback button</div>\n"},{"ts":"RawKeyboardButtonRequestPhone","id":"99ec6cc1-cffe-5dd3-a0f4-1978e14b670f","namespace":"$root","prefix":"","name":"keyboardButtonRequestPhone","type":"class","description":"<div>Button to request a user&#39;s phone number</div>\n"},{"ts":"RawKeyboardButtonRequestGeoLocation","id":"845ccc70-712c-5df5-bc2c-5a66c267895b","namespace":"$root","prefix":"","name":"keyboardButtonRequestGeoLocation","type":"class","description":"<div>Button to request a user&#39;s geolocation</div>\n"},{"ts":"RawKeyboardButtonSwitchInline","id":"ec97d33c-3c7c-586d-b2e6-d9df93efc723","namespace":"$root","prefix":"","name":"keyboardButtonSwitchInline","type":"class","description":"<div>Button to force a user to switch to inline mode Pressing the button will prompt the user to select one of their chats, open that chat and insert the botâ€˜s username and the specified inline query in the input field.</div>\n"},{"ts":"RawKeyboardButtonGame","id":"d805e05a-3f59-5ba3-bc17-78c28419f68d","namespace":"$root","prefix":"","name":"keyboardButtonGame","type":"class","description":"<div>Button to start a game</div>\n"},{"ts":"RawKeyboardButtonBuy","id":"d5e62515-678d-5d5d-8c91-bbbf91a0c23e","namespace":"$root","prefix":"","name":"keyboardButtonBuy","type":"class","description":"<div>Button to buy a product</div>\n"},{"ts":"RawKeyboardButtonUrlAuth","id":"ab0ebeda-f8ae-5097-87f6-636551fc9133","namespace":"$root","prefix":"","name":"keyboardButtonUrlAuth","type":"class","description":"<div>Button to request a user to authorize via URL using <a href=\"https://telegram.org/blog/privacy-discussions-web-bots#meet-seamless-web-bots\">Seamless Telegram Login</a>. When the user clicks on such a button, <code>messages.requestUrlAuth</code> should be called, providing the <code>button_id</code> and the ID of the container message. The returned <code>urlAuthResultRequest</code> object will contain more details about the authorization request (<code>request_write_access</code> if the bot would like to send messages to the user along with the username of the bot which will be used for user authorization). Finally, the user can choose to call <code>messages.acceptUrlAuth</code> to get a <code>urlAuthResultAccepted</code> with the URL to open instead of the <code>url</code> of this constructor, or a <code>urlAuthResultDefault</code>, in which case the <code>url</code> of this constructor must be opened, instead. If the user refuses the authorization request but still wants to open the link, the <code>url</code> of this constructor must be used.</div>\n"},{"ts":"RawInputKeyboardButtonUrlAuth","id":"f4d57bc5-b312-5d50-8956-859fc4aee0ba","namespace":"$root","prefix":"","name":"inputKeyboardButtonUrlAuth","type":"class","description":"<div>Button to request a user to <code>messages.acceptUrlAuth</code> via URL using <a href=\"https://telegram.org/blog/privacy-discussions-web-bots#meet-seamless-web-bots\">Seamless Telegram Login</a>.</div>\n"},{"ts":"RawKeyboardButtonRequestPoll","id":"1313f031-8b1f-5f6b-a2fe-cf9a6ebbe235","namespace":"$root","prefix":"","name":"keyboardButtonRequestPoll","type":"class","description":"<div>A button that allows the user to create and send a poll when pressed; available only in private</div>\n"}]},"usageMethods":{"nodes":[]},"usageTypes":{"nodes":[{"id":"91ee33a3-2f0e-5983-bfd0-6170e7d75d5a","prefix":"","type":"class","name":"keyboardButtonRow","description":"<div>Inline keyboard row</div>\n"}]}},"pageContext":{"prefix":"","name":"KeyboardButton","type":"union","namespace":"$root","subtypes":["keyboardButton","keyboardButtonUrl","keyboardButtonCallback","keyboardButtonRequestPhone","keyboardButtonRequestGeoLocation","keyboardButtonSwitchInline","keyboardButtonGame","keyboardButtonBuy","keyboardButtonUrlAuth","inputKeyboardButtonUrlAuth","keyboardButtonRequestPoll"],"hasSubtypes":true}},"staticQueryHashes":["3577901480"]}