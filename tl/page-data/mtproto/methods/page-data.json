{"componentChunkName":"component---src-templates-tl-types-list-tsx","path":"/mtproto/methods","result":{"data":{"methods":{"nodes":[{"id":"3b2c8901-0a1a-534f-8095-614a24a9c99f","prefix":"mtproto/","type":"method","name":"reqPq","description":"<div>Request for the first step of Authorization key derivation process. This method is deprecated, use <a href=\"/mtproto/method/reqPqMulti\">mtproto/reqPqMulti</a> instead. The difference is that when using this, only one server key is returned, while <code>req_pq_multi</code> will return multiple.</div>\n"},{"id":"195a4de0-4d28-547c-bea8-d765688b6f3a","prefix":"mtproto/","type":"method","name":"reqPqMulti","description":"<div>Request for the first step of Authorization key derivation process.</div>\n"},{"id":"6b0fa6c0-20e5-5fbe-8174-ac5bc82dc1d5","prefix":"mtproto/","type":"method","name":"reqDHParams","description":"<div>Request for the second step of Authorization key derivation process.</div>\n"},{"id":"a9c26390-373c-50ea-8242-e767910ce3af","prefix":"mtproto/","type":"method","name":"setClientDHParams","description":"<div>Request containing encrypted client-side variables for Diffie-Hellman exchange</div>\n"},{"id":"ddd09759-824c-5f08-84fd-0b8a1ff4d85c","prefix":"mtproto/","type":"method","name":"rpcDropAnswer","description":"<div>Cancellation of an RPC query. In certain situations, the client does not want to receive a response to an already transmitted RPC query, for example because the response turns out to be long and the client has decided to do without it because of insufficient link capacity. Simply interrupting the connection will not have any effect because the server would re-send the missing response at the first opportunity. Therefore, the client needs a way to cancel receipt of the RPC response message, actually acknowledging its receipt prior to it being in fact received, which will settle the server down and prevent it from re-sending the response. However, the client does not know the RPC response&#39;s message ID prior to receiving the response; the only thing it knows is the requesting message ID, i.e. the message ID of the relevant RPC query. Therefore, this special query is used</div>\n"},{"id":"1326ccaf-a2e6-5f00-bab0-64dbb55a0525","prefix":"mtproto/","type":"method","name":"getFutureSalts","description":null},{"id":"b8740c33-91b0-5a21-8255-88276ea38f64","prefix":"mtproto/","type":"method","name":"ping","description":"<div>Ping a server to test connection</div>\n"},{"id":"2e09d2f2-5e45-5457-b679-111e3642d9f7","prefix":"mtproto/","type":"method","name":"pingDelayDisconnect","description":"<div>Works like ping. In addition, after this is received, the server starts a timer which will close the current connection <code>disconnectDelay</code> seconds later unless it receives a new message of the same type which automatically resets all previous timers.\nIf the client sends these pings once every 60 seconds, for example, it may set <code>disconnect_delay</code> equal to 75 seconds.</div>\n"},{"id":"2fb19003-9ecf-5bea-a85d-afe4dc21f382","prefix":"mtproto/","type":"method","name":"destroyAuthKey","description":null},{"id":"8808a97b-f67c-52d6-a046-2e527e37e123","prefix":"mtproto/","type":"method","name":"destroySession","description":null}]},"other":{"group":[{"fieldValue":"$root"}]}},"pageContext":{"prefix":"mtproto/","ns":"$root","type":"methods","isTypes":false,"isMethods":true}},"staticQueryHashes":["3577901480"]}