{"componentChunkName":"component---src-templates-type-history-tsx","path":"/history/class/phoneCallProtocol","result":{"data":{"info":{"uid":"c_phoneCallProtocol","type":"class","name":"phoneCallProtocol","history":[{"action":"modified","diff":"{\"arguments\":{\"added\":[{\"name\":\"libraryVersions\",\"type\":\"string[]\"}],\"removed\":[],\"modified\":[]},\"id\":{\"old\":2730177995,\"new\":4236742600}}","in":{"date":"27-03-2020","layer":111,"rev":0,"commit":"ed715fb8100f84ac328e9e022a43869a47da8b8e","file":"Telegram/Resources/tl/api.tl","website":null}},{"action":"added","diff":"{\"name\":\"phoneCallProtocol\",\"id\":2730177995,\"type\":\"PhoneCallProtocol\",\"arguments\":[{\"name\":\"flags\",\"type\":\"$FlagsBitField\"},{\"name\":\"udpP2p\",\"type\":\"true\",\"optional\":true,\"predicate\":\"flags.0\"},{\"name\":\"udpReflector\",\"type\":\"true\",\"optional\":true,\"predicate\":\"flags.1\"},{\"name\":\"minLayer\",\"type\":\"number\"},{\"name\":\"maxLayer\",\"type\":\"number\"}],\"rawName\":\"phoneCallProtocol\",\"namespace\":\"$root\",\"uid\":\"c_phoneCallProtocol\",\"_type\":\"classes\"}","in":{"date":"30-12-2016","layer":61,"rev":0,"commit":"85b434bee4758ada2c9ba095faaba82bf06036db","file":"Telegram/SourceFiles/mtproto/scheme.tl","website":null}}]},"object":{"prefix":"","type":"class","name":"phoneCallProtocol","description":"<div>Protocol info for libtgvoip</div>\n","arguments":[{"name":"flags","description":"<div>Flags, see <a href=\"https://core.telegram.org/mtproto/TL-combinators#conditional-fields\">TL conditional fields</a></div>\n"},{"name":"udpP2p","description":"<div>Whether to allow P2P connection to the other participant</div>\n"},{"name":"udpReflector","description":"<div>Whether to allow connection to the other participants through the reflector servers</div>\n"},{"name":"minLayer","description":"<div>Minimum layer for remote libtgvoip</div>\n"},{"name":"maxLayer","description":"<div>Maximum layer for remote libtgvoip</div>\n"},{"name":"libraryVersions","description":"<div>When using <code>phone.requestCall</code> and <code>phone.acceptCall</code>, specify all library versions supported by the client. <br>The server will merge and choose the best library version supported by both peers, returning only the best value in the result of the callee&#39;s <code>phone.acceptCall</code> and in the <code>phoneCallAccepted</code> update received by the caller.</div>\n"}]}},"pageContext":{"uid":"c_phoneCallProtocol","name":"phoneCallProtocol","type":"class"}},"staticQueryHashes":["3577901480"]}